
	
	The format classes themselves hold a simple map to
	information and tags in a chiptune's file header.
	This map is in the form of an array!  zOMG!!

	Please look at current working formats for examples
	and/or templates to work from.

	Below is an explanation for the various variables
	that affect how a tag or info is read or written.


	TAG SCHEMES

	Lots of options!  Let's go over some!  :P

	"position" : starting location of tag

	"length" : tag's number of characters

	"delimiter" : some strings are null terminated

	"write" : set to true for writable tags

	"ord" : tag value = the ascii character code

	"lookup" : provide an array to fetch values

	"bitwise" : bit switches == multiple values


	...and if that isn't crafty enough for you, there
	are class method hooks to work with!

	function FetchInfoExtender($file)	{
	}

	function WriteTagsExtender($file)	{
	}

	These two methods can be added to a chiptune's
	format class.  This allows for much more
	complicated inferation and declarations of
	chiptune infos.  Also, make sure to --
	$this->report[] = 'adding junk to the log';
